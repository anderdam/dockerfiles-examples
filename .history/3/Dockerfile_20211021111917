# FROM -> Em qual imagem será baseado a nova imagem que será criada
FROM debian

# RUN -> Comando que será executado durante a criação do container, cada comando run cria uma nova camada na imagem
RUN apt-get update && apt-get install -y apache2 && apt-get clean

# ENV -> Environment, variáveis de ambiente
ENV APACHE_LOCK_DIR="/var/lock"
ENV APACHE_PID_FILE="/var/run/apache2.pid"
ENV APACHE_RUN_USER="www-data"
ENV APACHE_RUN_GROUP="www-data"
ENV APACHE_LOG_DIR="/var/log/apache2"

# COPY -> copiar arquivo local para container
# COPY index.html /var/www/html

# ADD -> semelhante ao copy, porém mais completo, como por exemplo adicionando um arquivo tar já descompactado.
ADD index.html /var/www/html

HEALTHCHECK --interval=5m --timeout=3s \
  CMD curl -f http://localhost/ || exit 1

#LABEL -> comentários e descrições
LABEL description="Webserver"
LABEL version="1.0.0"

VOLUME /var/www/html/
EXPOSE 80

# ENTRYPOINT -> é o ponto de entrada e principal processo no container, é o que vai ser executado primeiro quando ele for criado.
# É possível também executar por CMD, por exemplo CMD /usr/sbin/apachectl -D FOREGROUND, mas somente se não houver um entrypoint, se houver o entrypoint é possível passar somente parametros, como "-D", "FOREGROUND".
ENTRYPOINT [ "/usr/sbin/apachectl" ]
CMD ["-D", "FOREGROUND"]

